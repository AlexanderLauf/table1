% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/table1.R
\name{table1}
\alias{table1}
\alias{table1.default}
\alias{table1.formula}
\title{Generate an HTML table of descriptive statistics.}
\usage{
table1(x, ...)

\method{table1}{default}(x, labels, groupspan = NULL, rowlabelhead = "",
  topclass = "Rtable1", render = render.default, ...)

\method{table1}{formula}(x, data, overall = "Overall", rowlabelhead = "",
  topclass = "Rtable1", render = render.default, ...)
}
\arguments{
\item{x}{An object, typically a \code{formula} or \code{data.frame}.}

\item{...}{Further arguments, passed to \code{render}.}

\item{labels}{A list containing labels for variables, strata and groups (see Details).}

\item{groupspan}{A vector of integers specifying the number of strata to group together.}

\item{rowlabelhead}{A heading for the first column of the table, which contains the row labels.}

\item{topclass}{A class attribute for the outermost (i.e. \code{<table>}) tag.}

\item{render}{A function to render the table cells (see Details).}

\item{data}{For the formula interface, a \code{data.frame} from which the
variables in \code{x} should be taken.}

\item{overall}{Should a column for the total population be included and if so, what label
should the column have? Specify \code{NULL} or \code{FALSE} to omit the column.}
}
\value{
None (invisible \code{NULL}). Called for its side effects.
}
\description{
There are two interfaces, the default, which typically takes a
\code{data.frame} for \code{x}, and the formula interface. The formula
interface is less flexible, but simpler to use and designed to handle the
most common use cases. It is important to use factors appropriately for
categorical variables (i.e. have the levels labelled properly and in the
desired order). The contents of the table can be customized by providing
user-defined `renderer' functions. Customization of the table appearance is
deliberately not attempted, as this is best accomplished with CSS. To
facilitate this, some tags (such as row labels) are given specific classes
for easy CSS selection.
}
\section{Methods (by class)}{
\itemize{
\item \code{default}: The default interface, where \code{x} is a \code{data.frame}.

\item \code{formula}: The \code{formula} interface.
}}
\examples{

dat <- expand.grid(id=1:10, sex=c("Male", "Female"), treat=c("Treated", "Placebo"))
dat$age <- runif(nrow(dat), 10, 50)
dat$age[3] <- NA

label(dat$sex) <- "Sex"
label(dat$age) <- "Age"
label(dat$treat) <- "Treatment Group"

units(dat$age) <- "years"

# One level of stratification
table1(~ sex + age | treat, data=dat)

# Two levels of stratification (nesting)
table1(~ age | treat*sex, data=dat)

# Switch the order or nesting
table1(~ age | sex*treat, data=dat)

# No stratification
table1(~ treat + sex + age, data=dat)

# Something more complicated

dat$dose <- ifelse(dat$treat=="Placebo", "Placebo",
                   sample(c("5 mg", "10 mg"), nrow(dat), replace=TRUE))
dat$dose <- factor(dat$dose, levels=c("Placebo", "5 mg", "10 mg"))

strata <- c(split(dat, dat$dose),
            list("All treated"=subset(dat, treat=="Treated")),
            list(Overall=dat))

labels <- list(
    variables=list(sex=render.varlabel(dat$sex),
                   age=render.varlabel(dat$age)),
    groups=list("", "Treated", ""))

my.render.cont <- function(x) {
    with(stats.default(x), 
        sprintf("\%0.2f (\%0.1f)", MEAN, SD))
}

table1(strata, labels, groupspan=c(1, 3, 1), render.continuous=my.render.cont)

}
\keyword{utilities}

